
<defines>
`define CMD_POPF        #AUTOGEN_NEXT_CMD

`define CMDEX_POPF_STEP_0       4'd0
`define CMDEX_POPF_STEP_1       4'd1
</defines>

<decode>
dec_ready_one && decoder[7:0] == 8'h9D
`CMD_POPF
SET(dec_cmdex, `CMDEX_POPF_STEP_0);
SET(consume_one);
SET(dec_is_complex);
</decode>

<microcode>
`CMDEX_POPF_STEP_0
LOOP(`CMDEX_POPF_STEP_1);
</microcode>

<read>
IF(rd_cmd == `CMD_POPF && rd_cmdex == `CMDEX_POPF_STEP_0);
            
    SET(address_stack_pop);
    // waiting for esp in 'address_ready'
    
    SET(rd_src_is_memory);
    
    SET(rd_req_esp);
    SET(rd_req_eflags);
    
    IF(rd_mutex_busy_memory); SET(rd_waiting);
    ELSE();
        SET(read_virtual);

        IF(~(read_for_rd_ready)); SET(rd_waiting); ENDIF();
    ENDIF();
ENDIF();
</read>

<execute>
IF(exe_cmd == `CMD_POPF && exe_cmdex == `CMDEX_POPF_STEP_0);
    
    SET(offset_pop);

    SET(exe_result2, src);

    IF(exe_mutex_current[`MUTEX_EFLAGS_BIT]); SET(exe_waiting);
    ELSE();
        IF(v8086_mode && iopl < 2'd3);
            SET(exe_waiting);
            SET(exe_trigger_gp_fault); //exception GP(0)
        ENDIF();
    ENDIF();
ENDIF();
</execute>

<write>
IF(wr_cmd == `CMD_POPF && wr_cmdex == `CMDEX_POPF_STEP_0);
    
    SAVE(cflag,  result2[0]);
    SAVE(pflag,  result2[2]);
    SAVE(aflag,  result2[4]);
    SAVE(zflag,  result2[6]);
    SAVE(sflag,  result2[7]);
    SAVE(tflag,  result2[8]);
    SAVE(dflag,  result2[10]);
    SAVE(oflag,  result2[11]);
    SAVE(ntflag, result2[14]);
    
    IF(wr_operand_32bit);
        SAVE(rflag,  result2[16]);
        SAVE(acflag, result2[18]);
        SAVE(idflag, result2[21]);
    ENDIF();
    
    IF((protected_mode && cpl == 2'd0) || real_mode);
        SAVE(iopl,  result2[13:12]);
    ENDIF();
    
    IF((protected_mode && cpl <= iopl) || v8086_mode || real_mode);
        SAVE(iflag, result2[9]);
    ENDIF();
    
    //vmflag set not possible

    SAVE(esp, wr_stack_esp);
    
    // clear pipeline
    SET(wr_req_reset_micro);
    SET(wr_req_reset_rd);
    SET(wr_req_reset_exe);
ENDIF();
</write>
