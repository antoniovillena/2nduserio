
<defines>
`define CMD_OUTS        #AUTOGEN_NEXT_CMD

`define CMDEX_OUTS_first        4'd0
`define CMDEX_OUTS_protected    4'd1
</defines>

<decode>
dec_ready_one && { decoder[7:1], 1'b0 } == 8'h6E
`CMD_OUTS
SET(dec_cmdex, `CMDEX_OUTS_first);
IF(decoder[0] == 1'b0); SET(dec_is_8bit); ENDIF();
SET(consume_one);
SET(dec_is_complex);
</decode>

<microcode>
IF(`CMDEX_OUTS_first && ~(io_allow_check_needed));
    `CMDEX_OUTS_first
ENDIF();

IF(`CMDEX_OUTS_first && io_allow_check_needed);
    CALL(`CMDEX_io_allow_1);
    LOOP(`CMDEX_OUTS_protected);
ENDIF();
</microcode>


<read>
IF(rd_cmd == `CMD_OUTS);
        
    SET(address_esi);//-
    // waiting for esi in address_waiting

    IF(rd_mutex_busy_memory || (rd_mutex_busy_ecx && rd_prefix_group_1_rep != 2'd0)); SET(rd_waiting);
    //waiting for ecx for rd_string_ignore
    ELSE();
        
        IF(~(rd_string_ignore) && ~(io_allow_check_needed && rd_cmdex == `CMDEX_OUTS_first));
            SET(rd_src_is_memory);
            
            SET(read_virtual);

            IF(~(read_for_rd_ready)); SET(rd_waiting);
            ELSE();
                SET(rd_req_esi);
                //not needed -- reset after finish //IF(rd_prefix_group_1_rep != 2'd0); SET(rd_req_ecx); ENDIF();
            ENDIF();
        ENDIF();
    ENDIF();
ENDIF();
</read>

<execute>
IF(exe_cmd == `CMD_OUTS);
    
    SET(exe_result_push, src);

    IF(exe_mutex_current[`MUTEX_EDX_BIT]); SET(exe_waiting);
    ELSE();
        SET(exe_glob_param_1_set);
        SET(exe_glob_param_1_value, { 16'd0, edx[15:0] });
    ENDIF();
ENDIF();
</execute>

<write>
IF(wr_cmd == `CMD_OUTS);
    
    // - rep && ignore
    // - no rep
    // - rep && finish
    // - rep && not finish && not ignore
    
    IF(io_allow_check_needed && wr_cmdex == `CMDEX_OUTS_first);
        SET(wr_not_finished);
    ELSE();
        IF(~(wr_string_ignore));
        
            SET(write_io);
            
            IF(~(write_io_for_wr_ready)); SET(wr_waiting);
            ELSE();
                SAVE(esi, wr_esi_final);
                IF(wr_prefix_group_1_rep != 2'd0); SAVE(ecx, wr_ecx_final); ENDIF();
            
                IF(wr_string_finish || wr_prefix_group_1_rep == 2'd0);
                    SET(wr_req_reset_micro);
                    SET(wr_req_reset_rd);
                    SET(wr_req_reset_exe);
                ELSE();
                    SET(wr_not_finished);

                    SET(wr_string_in_progress);
                ENDIF();
            ENDIF();
        ENDIF();

        IF(wr_string_ignore);
            SET(wr_req_reset_micro);
            SET(wr_req_reset_rd);
            SET(wr_req_reset_exe);
        ENDIF();
    ENDIF();
ENDIF();
</write>
